syntax = "proto3";

package disruption.api;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "akkaserverless/annotations.proto";

service DisruptionService {
  option (akkaserverless.codegen) = {
    value_entity: {
      name: "disruption.domain.Disruption"
      entity_type: "disruptions"
      state: "disruption.domain.DisruptionState"
    }
  };

  rpc Create(Disruption) returns (google.protobuf.Empty) {}

  rpc GetDisruption(GetDisruptionRequest) returns (Disruption) {}

  rpc flightUpdates(FlightUpdatesRequest) returns (Disruptions) {}

  rpc GetAll(google.protobuf.Empty) returns (Disruptions) {}

}

message Disruption {
  string disruption_id = 1 [(akkaserverless.field).entity_key = true];
  string event_type = 2;
  string flight = 3;
  google.protobuf.Timestamp event_time = 4;
  google.protobuf.Timestamp disruption_time = 5;
}

message Disruptions {
  repeated Disruption disruptions = 1;
}

message GetDisruptionRequest {
  string disruption_id = 1 [(akkaserverless.field).entity_key = true];
}

message FlightUpdatesRequest {
  repeated Flight flights = 1;
}

message Flight {
  string flight_key = 1 [(akkaserverless.field).entity_key = true];
  bool is_cancelled = 2;
  google.protobuf.Timestamp scheduled_departure = 3;
  google.protobuf.Timestamp block_departure = 4;
}
